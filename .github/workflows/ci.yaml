name: book-store

on:
    pull_request:
        branches:
            - main
    push:
        branches:
            - main


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest
  build:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: "Login Docker Hub"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: "Build and push Docker images"
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest
      
      - name: "Build and push nginx image"
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./nginx.Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/nginx_proxy:latest

      - name: Deploy to AWS EC2 using SSH
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: 44.201.100.248       # The public IP of your EC2 instance
          username: ubuntu                        # SSH username (usually ec2-user for Amazon Linux)
          key: ${{ secrets.EC2_SECRET_KEY }}   # Your private SSH key
          port: 22                                  # Default SSH port
          script: |
            # Pull the latest Docker images
            docker pull ${{ secrets.DOCKER_USERNAME }}/nginx_proxy:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest

            # Stop the old containers (if running)
            docker stop nginx_proxy fastapi-app || true
            docker rm nginx_proxy fastapi-app || true

            # Run the updated nginx_proxy container
            docker run -d --name nginx_proxy -p 80:80 ${{ secrets.DOCKER_USERNAME }}/nginx_proxy:latest

            # Run the updated fastapi-app container
            docker run -d --name fastapi-app -p 8000:8000 ${{ secrets.DOCKER_USERNAME }}/fastapi-app:latest
    
